---
import { pwaInfo } from 'virtual:pwa-info'

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
    />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" sizes="180x180" />
    <link rel="mask-icon" href="/logo.svg" color="#FFFFFF" />
    <meta name="theme-color" content="#101010" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content="Get answers from AI, elegantly." />
    {
      import.meta.env.HEAD_SCRIPTS && (
        <Fragment set:html={import.meta.env.HEAD_SCRIPTS} />
      )
    }
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
    {
      import.meta.env.PROD && pwaInfo?.registerSW && (
        <Fragment set:html={pwaInfo.registerSW.scriptTag} />
      )
    }
  </head>
  <body class="bg-base fg-base">
    <slot />
  </body>
</html>

<script>
(function() {
  const prefersDark
    = window.matchMedia
    && window.matchMedia('(prefers-color-scheme: dark)').matches
  const setting = localStorage.getItem('theme') || 'auto'
  if (setting === 'dark' || (prefersDark && setting !== 'light'))
    document.documentElement.classList.toggle('dark', true)
})()
</script>
